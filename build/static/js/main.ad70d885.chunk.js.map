{"version":3,"sources":["StateProvider.js","reducer.js","new-logo.jpg","Fallback.js","Login.js","Rsgister.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","user","localStorage","getItem","token","user_details","JSON","parse","isAuth","currentBooking","actionTypes","SET_USER","LOGOUT","USER_INFO","BOOK_HOTEL","state","action","type","console","log","module","exports","Fallback","className","src","image","Login","dispatch","useState","email","setEmail","password","setPassword","history","useHistory","style","backgroundColor","position","textAlign","for","paddingLeft","id","onChange","e","target","data-type","cursor","onClick","trim","axios","get","then","res","setItem","data","userId","stringify","rowData","expiryDate","Date","getTime","toISOString","cust_name","alert","push","catch","err","to","Rsgister","reg_email","setRegEmail","reg_password","setRegPassword","reg_name","setRegName","reg_phone","setRegPhone","width","fontSize","marginBottom","color","fontFamily","fontWeight","post","class","Footer","React","lazy","Header","Home","SearchPage","Profile","Bookings","Edituser","Order","App","fallback","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ad70d885.chunk.js","sourcesContent":["import React,{createContext,useReducer,useContext} from 'react'\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children})=>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>{children}</StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = ()=>useContext(StateContext);","\r\nexport const initialState = {\r\n    \r\n    user:localStorage.getItem('userId'),\r\n    token:localStorage.getItem(\"token\"),\r\n    user_details:JSON.parse(localStorage.getItem(\"details\")),\r\n    isAuth : localStorage.getItem('isAuth'),\r\n    currentBooking:null\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n    LOGOUT:\"LOGOUT\",\r\n    USER_INFO: \"USER_INFO\",\r\n    BOOK_HOTEL: \"BOOK_HOTEL\",\r\n\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  \r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user:action.user,\r\n                token:action.token,\r\n                isAuth:action.isAuth\r\n            };\r\n            case actionTypes.LOGOUT:\r\n                return{\r\n                    ...state,\r\n                    user:null,\r\n                    isAuth:false\r\n                };    \r\n         \r\n        case actionTypes.USER_INFO:\r\n                return{\r\n                    ...state,\r\n                    user_details:action.user_details,\r\n                };  \r\n        \r\n                case actionTypes.BOOK_HOTEL:\r\n                    console.log(action);\r\n                    return{\r\n                        ...state,\r\n                        currentBooking:action.currentBooking,\r\n                    };         \r\n\r\n\r\n        default: \r\n          return state;    \r\n    }\r\n}\r\n\r\nexport default reducer;","module.exports = __webpack_public_path__ + \"static/media/new-logo.dc7a7c89.jpg\";","import React from 'react'\r\nimport image from \"./new-logo.jpg\"\r\nimport \"./reloader.css\"\r\nfunction Fallback() {\r\n    return (\r\n        <div className=\"reloader\">\r\n            <img src={image} className=\"reloader_image\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fallback\r\n\r\n\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from \"axios\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {MdEmail} from \"react-icons/md\"\r\nimport {RiLockPasswordFill} from \"react-icons/ri\" \r\nimport { useStateValue } from './StateProvider'\r\nimport { actionTypes } from './reducer'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n    var [email,setEmail]=useState('');\r\n\r\n\r\n    var [password,setPassword]=useState('');\r\n    \r\n  var history = useHistory();\r\n\r\n        function login_in(){\r\n            if(email.trim()!==\" \"&& password.trim()!==\" \"){\r\n                axios.get(`http://localhost:8000/login/${email}/${password}`)\r\n            .then(res=>{\r\n                \r\n                localStorage.setItem('token', res.data.token);\r\n                localStorage.setItem('userId', res.data.userId);\r\n                localStorage.setItem('details', JSON.stringify(res.data.rowData[0]));\r\n                localStorage.setItem('isAuth', true);\r\n\r\n                const remainingMilliseconds = 60 * 60 * 1000;\r\n                const expiryDate = new Date(\r\n                  new Date().getTime() + remainingMilliseconds\r\n                );\r\n                localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n                        console.log(JSON.stringify(res.data.rowData[0]));\r\n                    dispatch({\r\n                        type:actionTypes.SET_USER,\r\n                        user:res.data.rowData[0].cust_name,\r\n                        token: res.data.token,\r\n                        isAuth: true\r\n                    })\r\n              \r\n                dispatch({\r\n                    type:actionTypes.USER_INFO,\r\n                    user_details:res.data.rowData[0]\r\n                })\r\n                    alert(\"Successfully loggedIn ..!\")\r\n                    history.push(\"/\");\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n               \r\n            });\r\n\r\n            }\r\n            else{\r\n                alert(\"Enter the valid credentials..\");\r\n            }\r\n            \r\n\r\n\r\n            }\r\n    return (\r\n        <div style={{backgroundColor:\"#ff3f6c\",position:'relative'}}>\r\n        <div className=\"box\" >\r\n        <div className=\"box-fluid\">\r\n           \r\n                    <h2 style={{textAlign:\"center\"}}>Login</h2>\r\n                    <div className=\"group\">\r\n                        <label for=\"user\" className=\"label\" style={{paddingLeft:\"0px\"}}><MdEmail /> E-mail</label>\r\n                        <input id=\"user\" type=\"email\" className=\"input\"  onChange={(e)=>{setEmail(e.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <label for=\"pass\" className=\"label\" style={{paddingLeft:\"0px\"}}><RiLockPasswordFill />Password</label>\r\n                        <input id=\"pass\" type=\"password\" className=\"input\" onChange={(e)=>{setPassword(e.target.value)}} data-type=\"password\" />\r\n                    </div>\r\n                    <div className=\" \">\r\n                        <input id=\"check\" type=\"checkbox\" className=\"check\" />\r\n                        <label for=\"check\" style={{cursor:\"pointer\"}}><span className=\"icon\"></span> Keep me Signed in</label>\r\n                    </div>\r\n                    <div className=\"actions\">\r\n                            <button className=\"actionButton\" onClick={login_in}>Sign In</button>\r\n                             <Link to=\"/user_register\" className=\"actionButton\">Register</Link>          \r\n                    </div>\r\n                    <div className=\"foot-lnk\">\r\n                        <Link to=\"#forgot\">Forgot Password?</Link>\r\n                    </div>\r\n                </div>\r\n               \r\n                </div>\r\n            </div>\r\n      \r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n","import React,{useState} from 'react'\r\nimport axios from \"axios\"\r\n\r\nimport {BsFillPersonFill} from \"react-icons/bs\"\r\nimport {MdEmail} from \"react-icons/md\"\r\nimport {AiFillPhone} from \"react-icons/ai\" \r\nimport {RiLockPasswordFill} from \"react-icons/ri\" \r\nimport \"./AdminRegister.css\"\r\n\r\nimport {Link,  useHistory} from \"react-router-dom\"\r\n\r\nfunction Rsgister() {\r\n\r\n  const history = useHistory();\r\n\r\n    function adduser(){\r\n        axios.post(\"http://localhost:8000/addcustomer\",{\r\n        \r\n          \"username\":reg_name,\r\n          \"useremail\":reg_email,\r\n          \"phone\":reg_phone,\r\n          \"password\":reg_password\r\n        \r\n      }).then(res=>{\r\n        \r\n          alert(res.data);\r\n          history.push(\"/login\");\r\n          \r\n      })\r\n      .catch(err=>{\r\n        alert(err);\r\n        \r\n      })\r\n\r\n    }\r\n\r\n    \r\n      \r\n    var [reg_email,setRegEmail]=useState(\"\");\r\n    var [reg_password,setRegPassword]=useState(\"\");\r\n    \r\n    var [reg_name,setRegName]=useState(\"\");\r\n    var [reg_phone,setRegPhone]=useState(\"\");\r\n          \r\n        \r\n    return (\r\n        \r\n        <div  className=\"registerBox\" style={{width:\"auto 50%\"}}>\r\n              \r\n        <div className=\"register\">   \r\n        \r\n         <h2 style={{fontSize:\"30px\",textAlign:\"center\",marginBottom:\"10px\",color:\"white\"\r\n        ,fontFamily:\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n        }}>Register</h2>\r\n          <div className=\"registerInputs\">\r\n          <label for=\"username\" className=\"label\" style={{color:\"black\",fontSize:\"18px\",fontWeight:\"500\"}} ><BsFillPersonFill /> Username</label>\r\n         <input  type=\"text\" className=\"input\" id=\"username\" onChange={(e)=>{setRegName(e.target.value)}}/>\r\n         <label for=\"email\" className=\"label\" style={{color:\"black\",fontSize:\"18px\",fontWeight:\"500\"}}> <MdEmail /> Email Address</label>\r\n        <input id=\"email\" type=\"email\" className=\"input\" onChange={(e)=>{setRegEmail(e.target.value)}}/>\r\n        <label style={{color:\"black\",fontSize:\"18px\",fontWeight:\"500\"}} for=\"phone\" className=\"label\"><AiFillPhone /> Phone Number</label>\r\n        <input id=\"phone\" type=\"number\" className=\"input\" data-type=\"password\" onChange={(e)=>{setRegPhone(e.target.value)}}/>\r\n    \r\n        <label style={{color:\"black\",fontSize:\"18px\",fontWeight:\"500\"}} for=\"password\" className=\"label\"> <RiLockPasswordFill />Password</label>\r\n        <input id=\"password\" type=\"password\" className=\"input\" data-type=\"password\" onChange={(e)=>{setRegPassword(e.target.value)}}/>\r\n    \r\n\r\n        <input type=\"submit\" className=\"button\" value=\"Sign Up\" onClick={adduser}/>\r\n\r\n\r\n        <Link to=\"/\" class=\"signin\">\r\n      \r\n      Already Member?\r\n\r\n</Link>\r\n\r\n          </div>\r\n        \r\n    \r\n               </div>\r\n               </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Rsgister\r\n","import React,{Suspense} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\"\r\n\r\nimport Fallback from './Fallback';\r\nimport Login from \"./Login\"\r\nimport \"./AdminRegister.css\"\r\nimport Rsgister from \"./Rsgister\"\r\n\r\n\r\nimport { useStateValue } from './StateProvider'\r\nconst Footer = React.lazy(()=>import('./Footer'));\r\nconst Header = React.lazy(()=>import('./Header'));\r\nconst Home = React.lazy(()=>import('./Home'));\r\nconst SearchPage = React.lazy(()=>import('./SearchPage'));\r\nconst Profile = React.lazy(()=>import('./Profile'));\r\nconst Bookings = React.lazy(()=>import('./Bookings'));\r\nconst Edituser = React.lazy(()=>import('./Edituser'));\r\nconst Order = React.lazy(()=>import('./Order'));\r\n\r\n\r\nfunction App() {\r\n  const [{isAuth}, dispatch] = useStateValue();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n   \r\n      <Router>\r\n  \r\n      \r\n            \r\n        <Switch>\r\n              <Suspense fallback={<Fallback />} >\r\n\r\n              <Route path=\"/search/:startdate/:enddate/:persons\">   \r\n              <div><Header /><SearchPage />      <Footer /></div> </Route>\r\n              <Route path=\"/edituser\">     \r\n              {isAuth ? ( <div><Header /><Edituser /><Footer /></div>) : ( <Redirect to=\"login\" />) }</Route> \r\n              <Route path=\"/login\">       <Login /></Route>\r\n              <Route path=\"/user_register\"><Rsgister /></Route>\r\n              <Route path=\"/profile\">{isAuth ? ( <div><Header /><Profile />      <Footer /></div>) : ( <Redirect to=\"login\" />) }</Route>\r\n              <Route path=\"/bookings\">{isAuth ? ( <div><Header /><Bookings />       <Footer /></div>) : ( <Redirect to=\"login\" />) }</Route>\r\n              <Route path=\"/checkout\" ><Header />       <Order />      <Footer /></Route>\r\n              <Route path=\"/\" exact><Header />       <Home />      <Footer /></Route>\r\n        \r\n     \r\n       </Suspense>\r\n\r\n        </Switch>\r\n    </Router>\r\n    \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StateProvider } from './StateProvider';\r\nimport reducer, { initialState } from './reducer';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <StateProvider initialState={initialState} reducer={reducer}><App /></StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}